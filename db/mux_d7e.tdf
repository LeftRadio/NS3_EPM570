--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="MAX II" IGNORE_CASCADE_BUFFERS="OFF" LPM_PIPELINE=1 LPM_SIZE=2 LPM_WIDTH=8 LPM_WIDTHS=1 clock data result sel
--VERSION_BEGIN 9.1SP2 cbx_lpm_mux 2010:03:24:20:43:43:SJ cbx_mgl 2010:03:24:21:01:05:SJ  VERSION_END


-- Copyright (C) 1991-2010 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 8 
SUBDESIGN mux_d7e
( 
	clock	:	input;
	data[15..0]	:	input;
	result[7..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	external_latency_ffsa[7..0] : dffe;
	result_node[7..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data19w[1..0]	: WIRE;
	w_data31w[1..0]	: WIRE;
	w_data43w[1..0]	: WIRE;
	w_data55w[1..0]	: WIRE;
	w_data5w[1..0]	: WIRE;
	w_data67w[1..0]	: WIRE;
	w_data79w[1..0]	: WIRE;
	w_data91w[1..0]	: WIRE;

BEGIN 
	external_latency_ffsa[].clk = clock;
	external_latency_ffsa[].d = ( result_node[]);
	result[7..0] = external_latency_ffsa[7..0].q;
	result_node[] = ( ((sel_node[] & w_data91w[1..1]) # ((! sel_node[]) & w_data91w[0..0])), ((sel_node[] & w_data79w[1..1]) # ((! sel_node[]) & w_data79w[0..0])), ((sel_node[] & w_data67w[1..1]) # ((! sel_node[]) & w_data67w[0..0])), ((sel_node[] & w_data55w[1..1]) # ((! sel_node[]) & w_data55w[0..0])), ((sel_node[] & w_data43w[1..1]) # ((! sel_node[]) & w_data43w[0..0])), ((sel_node[] & w_data31w[1..1]) # ((! sel_node[]) & w_data31w[0..0])), ((sel_node[] & w_data19w[1..1]) # ((! sel_node[]) & w_data19w[0..0])), ((sel_node[] & w_data5w[1..1]) # ((! sel_node[]) & w_data5w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data19w[] = ( data[9..9], data[1..1]);
	w_data31w[] = ( data[10..10], data[2..2]);
	w_data43w[] = ( data[11..11], data[3..3]);
	w_data55w[] = ( data[12..12], data[4..4]);
	w_data5w[] = ( data[8..8], data[0..0]);
	w_data67w[] = ( data[13..13], data[5..5]);
	w_data79w[] = ( data[14..14], data[6..6]);
	w_data91w[] = ( data[15..15], data[7..7]);
END;
--VALID FILE
