
`include "trigger.v"


module Synchronization
(	
	input [7:0] SYNC_DATA_IN,
	input [7:0] Delay,
	input [7:0] Trg_Lv_UP,
	input [7:0] Trg_Lv_DOWN,
	input [7:0] LA_MASK_CND,
	input [7:0] LA_MASK_DIFF,
	input Sync_OUT_WIN,
	input sync_ON,
	input Start_Write,
	input CLK_EN,
	input EN,
	input Enable_Trig,
	input LA_TRIGG_IN,
	input LA_OR_OSC_TRIGG,

	input CLK,
   
	output reg WinCnt_EN,
	output SRAM_WR
);

wire ADC_trigger_event;
wire LA_trigger_event;

assign SRAM_WR = ~WinCnt_EN;


always @(posedge CLK) begin

	WinCnt_EN <= ( (EN | CLK_EN) & (ADC_trigger_event & LA_trigger_event) );
	
end


trigger  trigger_1
(
	.CLK(CLK),
	.CLK_EN(CLK_EN),
	.Trg_Lv_UP(Trg_Lv_UP),
	.Trg_Lv_DOWN(Trg_Lv_DOWN),
	.TRIG_DATA_IN(SYNC_DATA_IN),         
	.Delay(Delay),             
	.Start_Write(Start_Write),
	.Enable_Trig(Enable_Trig),
	.Sync_OUT_WIN(Sync_OUT_WIN),
	.sync_ON(sync_ON),         
	.trig_out(ADC_trigger_event)
);
          

LA_TRIG LA_TRIG_1
(
	.DATA_IN(SYNC_DATA_IN),
	.Trg_Lv_UP(Trg_Lv_UP),
	.Trg_Lv_DOWN(Trg_Lv_DOWN),
	.LA_MASK_CND(LA_MASK_CND),
	.LA_MASK_DIFF(LA_MASK_DIFF),	//
	.SYNC_MODE(sync_mode),			//
	
	.Enable_Trig(sync_ON),			// 
	.CLK(CLK),
    
	.trig_out(LA_trigger_event)		//
);       


endmodule 

